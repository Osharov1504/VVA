import com.github.tomakehurst.wiremock.client.WireMock;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;
import static com.github.tomakehurst.wiremock.client.WireMock.equalTo;
import static com.github.tomakehurst.wiremock.client.WireMock.post;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class ApiServiceTest {

    private ApiService apiService;
    private ExternalService mockExternalService;

    @BeforeEach
    public void setup() {
        mockExternalService = Mockito.mock(ExternalService.class);
        apiService = new ApiService(mockExternalService);
        WireMock.configureFor("localhost", 8080);
        WireMock.stubFor(post("/some-endpoint")
            .withRequestBody(equalTo("{ \"key\": \"value\" }"))
            .willReturn(aResponse()
                .withStatus(200)
                .withBody("{ \"response\": \"success\" }")));
    }

    @Test
    public void testApiRequest() {
        Mockito.when(mockExternalService.getData()).thenReturn("mocked data");

        String response = apiService.sendRequest("{ \"key\": \"value\" }");

        assertEquals("success", response);
    }

}
